using System.Collections.Generic;

public class B59Upgrade : IBatchUpgrade
{
	private static readonly Int3[] batches = new Int3[170]
	{
		new Int3(3, 14, 9),
		new Int3(3, 14, 10),
		new Int3(3, 14, 11),
		new Int3(3, 15, 10),
		new Int3(3, 16, 10),
		new Int3(4, 14, 9),
		new Int3(4, 14, 10),
		new Int3(4, 14, 11),
		new Int3(4, 15, 9),
		new Int3(4, 15, 10),
		new Int3(4, 16, 9),
		new Int3(4, 16, 10),
		new Int3(4, 16, 11),
		new Int3(4, 17, 10),
		new Int3(5, 14, 9),
		new Int3(5, 14, 10),
		new Int3(5, 14, 11),
		new Int3(5, 15, 9),
		new Int3(5, 15, 10),
		new Int3(5, 16, 9),
		new Int3(5, 16, 10),
		new Int3(5, 16, 11),
		new Int3(5, 17, 9),
		new Int3(5, 17, 10),
		new Int3(6, 16, 9),
		new Int3(6, 16, 10),
		new Int3(7, 16, 9),
		new Int3(7, 16, 10),
		new Int3(7, 17, 8),
		new Int3(7, 17, 9),
		new Int3(7, 17, 9),
		new Int3(7, 17, 10),
		new Int3(7, 17, 11),
		new Int3(7, 18, 11),
		new Int3(8, 17, 10),
		new Int3(8, 17, 11),
		new Int3(9, 17, 7),
		new Int3(11, 10, 13),
		new Int3(11, 10, 14),
		new Int3(11, 11, 12),
		new Int3(11, 11, 13),
		new Int3(11, 11, 14),
		new Int3(12, 10, 14),
		new Int3(12, 11, 12),
		new Int3(12, 11, 13),
		new Int3(12, 11, 14),
		new Int3(13, 10, 13),
		new Int3(13, 10, 14),
		new Int3(13, 11, 12),
		new Int3(13, 11, 13),
		new Int3(13, 11, 14),
		new Int3(14, 17, 13),
		new Int3(14, 18, 13),
		new Int3(1, 16, 8),
		new Int3(1, 16, 9),
		new Int3(1, 16, 9),
		new Int3(2, 16, 7),
		new Int3(2, 16, 8),
		new Int3(2, 16, 9),
		new Int3(2, 16, 10),
		new Int3(2, 16, 10),
		new Int3(2, 16, 11),
		new Int3(2, 16, 12),
		new Int3(2, 17, 8),
		new Int3(2, 17, 11),
		new Int3(2, 17, 12),
		new Int3(3, 16, 7),
		new Int3(3, 16, 8),
		new Int3(3, 16, 8),
		new Int3(3, 16, 9),
		new Int3(3, 16, 11),
		new Int3(3, 16, 12),
		new Int3(3, 17, 7),
		new Int3(3, 17, 8),
		new Int3(3, 17, 8),
		new Int3(3, 17, 9),
		new Int3(3, 17, 10),
		new Int3(3, 17, 11),
		new Int3(3, 17, 12),
		new Int3(4, 16, 7),
		new Int3(4, 16, 8),
		new Int3(4, 16, 8),
		new Int3(4, 17, 7),
		new Int3(4, 17, 8),
		new Int3(4, 17, 9),
		new Int3(4, 18, 7),
		new Int3(5, 16, 8),
		new Int3(5, 17, 7),
		new Int3(5, 17, 7),
		new Int3(5, 17, 8),
		new Int3(5, 17, 9),
		new Int3(5, 18, 9),
		new Int3(15, 18, 11),
		new Int3(15, 19, 11),
		new Int3(16, 18, 11),
		new Int3(16, 18, 12),
		new Int3(17, 18, 12),
		new Int3(19, 17, 14),
		new Int3(21, 19, 10),
		new Int3(4, 16, 4),
		new Int3(5, 16, 3),
		new Int3(6, 17, 6),
		new Int3(7, 15, 4),
		new Int3(7, 15, 5),
		new Int3(7, 15, 6),
		new Int3(7, 15, 7),
		new Int3(7, 16, 4),
		new Int3(7, 16, 5),
		new Int3(7, 16, 6),
		new Int3(7, 17, 6),
		new Int3(7, 18, 9),
		new Int3(7, 18, 10),
		new Int3(8, 15, 4),
		new Int3(8, 15, 5),
		new Int3(8, 15, 6),
		new Int3(8, 15, 7),
		new Int3(8, 16, 2),
		new Int3(8, 16, 3),
		new Int3(8, 16, 4),
		new Int3(8, 16, 5),
		new Int3(8, 16, 6),
		new Int3(8, 16, 7),
		new Int3(8, 16, 10),
		new Int3(8, 18, 9),
		new Int3(8, 18, 10),
		new Int3(8, 18, 10),
		new Int3(8, 18, 11),
		new Int3(9, 14, 6),
		new Int3(9, 14, 7),
		new Int3(9, 15, 3),
		new Int3(9, 15, 4),
		new Int3(9, 15, 5),
		new Int3(9, 15, 6),
		new Int3(9, 15, 7),
		new Int3(9, 16, 2),
		new Int3(9, 16, 3),
		new Int3(9, 16, 4),
		new Int3(9, 16, 5),
		new Int3(9, 16, 6),
		new Int3(9, 16, 7),
		new Int3(9, 18, 10),
		new Int3(9, 18, 10),
		new Int3(9, 18, 11),
		new Int3(10, 14, 6),
		new Int3(10, 14, 7),
		new Int3(10, 15, 2),
		new Int3(10, 15, 3),
		new Int3(10, 15, 4),
		new Int3(10, 15, 6),
		new Int3(10, 15, 7),
		new Int3(10, 16, 1),
		new Int3(10, 16, 2),
		new Int3(10, 16, 3),
		new Int3(10, 16, 4),
		new Int3(10, 16, 6),
		new Int3(10, 16, 7),
		new Int3(10, 17, 7),
		new Int3(10, 17, 8),
		new Int3(10, 17, 8),
		new Int3(11, 14, 6),
		new Int3(11, 14, 7),
		new Int3(11, 15, 2),
		new Int3(11, 15, 3),
		new Int3(11, 15, 6),
		new Int3(11, 15, 7),
		new Int3(11, 16, 1),
		new Int3(11, 16, 2),
		new Int3(11, 16, 3),
		new Int3(11, 17, 8),
		new Int3(11, 18, 10)
	};

	public int GetChangeset()
	{
		return 25020;
	}

	public IEnumerable<Int3> GetBatches()
	{
		return batches;
	}
}
